/**

  @mixins
-----------------------------------------------------------
  _base/_mixins.scss
-----------------------------------------------------------

  All the mixins which can be useful for any project.
  Explained one by one.

-------------------------------------------------------- */

/* Mixin font-size
--------------------------------------------------------

  REM calculation with px fallback
  Example: @include font-size(15px);

------------------------------------------------------ */
@function calculate-rem($size) {
  $rem-size: $size / $base-size;
  @return $rem-size * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculate-rem($size);
}

/* Mixin text ellipsis
--------------------------------------------------------

  Example: @include truncate;
           @include dont-truncate;

------------------------------------------------------ */
@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin dont-truncate {
  white-space: normal;
  overflow: auto;
  text-overflow: unset;
}

/* Mixin text alignment
--------------------------------------------------------

  Example: @include text-align(right);

------------------------------------------------------ */

@mixin text-align($value) {
  text-align: $value;
}


/* Mixin text alignment
--------------------------------------------------------

  Example: @include text-align(right);

------------------------------------------------------ */

@mixin align($value) {
  float: $value;
}


/* Mixin borders
--------------------------------------------------------
  Can be equal or different
  Example: @include border-radius(3px);
           @include border-radius(1px 0 20px 3px);

------------------------------------------------------ */
@mixin border-radius($radius...) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}

/* Mixin hidden
--------------------------------------------------------
  Remove elements but still in the DOM
  Example: @include hidden;

------------------------------------------------------ */
@mixin hidden {
  visibility: hidden;
  overflow: hidden;
  width: 0;
  height: 0;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* Mixin not-displayed
--------------------------------------------------------
  Remove elements
  Example: @include hidden;

------------------------------------------------------ */
@mixin not-displayed {
  display: none;
  visibility: hidden;
}


/* Mixin Animation
--------------------------------------------------------
  1- KEYFRAME
    Example:
        @include keyframe(fadeout) {
          0% {
              opacity: 1;
          }

          100% {
              opacity: 0;
          }
      }

  2- ANIMATION
    Example
    @include animation(fadeOut 10s linear forward)

------------------------------------------------------ */

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

/* Mixin Transition
--------------------------------------------------------
 Transition mixin
    Example usage:
     @include transition(color .3s ease);

------------------------------------------------------ */

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

/* Mixin Transform
--------------------------------------------------------
1- Generic transform
  2- Rotate
    Example usage:
     @include rotate(45);

  3- Scale
  4- Translate
  5- Skew
  6- Transform-origin

------------------------------------------------------ */

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
  -moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}